// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreewInc.Core.Persistence.Contexts;

#nullable disable

namespace TreewInc.Core.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240915205722_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("FullName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Allen.Langosh@hotmail.com",
                            Name = "Kale Lebsack",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Virgie_Bashirian@hotmail.com",
                            Name = "Finn Jamel Nitzsche",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Eliane15@gmail.com",
                            Name = "Brandyn Hudson",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Bethel.Grady48@hotmail.com",
                            Name = "Melissa Lila Jacobs",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Electa_Wunsch97@hotmail.com",
                            Name = "Art Bayer",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Pasquale13@hotmail.com",
                            Name = "Jaylon Esther Cole",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Dayne80@hotmail.com",
                            Name = "Stephon Karli Herman",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Caesar.Schiller@hotmail.com",
                            Name = "Sydnie Alyce Flatley",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Dillon_Erdman20@hotmail.com",
                            Name = "Jensen Dare",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Maria.Denesik74@gmail.com",
                            Name = "Elouise Borer",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        });
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Non consequatur perferendis doloribus sed unde.",
                            Name = "Ergonomic Wooden Salad",
                            Price = 51.83m,
                            Stock = 55
                        },
                        new
                        {
                            Id = 2,
                            Description = "Qui quis debitis fugiat qui quia sit aspernatur.",
                            Name = "Tasty Rubber Mouse",
                            Price = 185.71m,
                            Stock = 87
                        },
                        new
                        {
                            Id = 3,
                            Description = "Praesentium iste quibusdam iusto eveniet recusandae minima minus esse.",
                            Name = "Awesome Metal Cheese",
                            Price = 16.14m,
                            Stock = 56
                        },
                        new
                        {
                            Id = 4,
                            Description = "Et dolor voluptatibus ullam ad perspiciatis.",
                            Name = "Incredible Plastic Salad",
                            Price = 797.87m,
                            Stock = 72
                        },
                        new
                        {
                            Id = 5,
                            Description = "Voluptatibus quam vel aperiam.",
                            Name = "Ergonomic Plastic Chips",
                            Price = 370.29m,
                            Stock = 53
                        },
                        new
                        {
                            Id = 6,
                            Description = "Earum aspernatur ut dolore vel perferendis magni ex.",
                            Name = "Fantastic Plastic Tuna",
                            Price = 871.11m,
                            Stock = 92
                        },
                        new
                        {
                            Id = 7,
                            Description = "Et nihil vel qui.",
                            Name = "Handcrafted Soft Mouse",
                            Price = 129.62m,
                            Stock = 19
                        },
                        new
                        {
                            Id = 8,
                            Description = "Soluta nesciunt eaque placeat sed esse dolore.",
                            Name = "Awesome Frozen Ball",
                            Price = 258.73m,
                            Stock = 31
                        },
                        new
                        {
                            Id = 9,
                            Description = "Debitis necessitatibus quos modi distinctio rerum iure qui.",
                            Name = "Fantastic Granite Sausages",
                            Price = 140.53m,
                            Stock = 98
                        },
                        new
                        {
                            Id = 10,
                            Description = "Consequatur aliquid est.",
                            Name = "Refined Wooden Towels",
                            Price = 387.16m,
                            Stock = 74
                        });
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Sale", b =>
                {
                    b.HasOne("TreewInc.Core.Domain.Entities.Client", "Client")
                        .WithMany("Sales")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreewInc.Core.Domain.Entities.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Client", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Product", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
