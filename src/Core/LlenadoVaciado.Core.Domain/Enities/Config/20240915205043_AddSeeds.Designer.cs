// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreewInc.Core.Persistence.Contexts;

#nullable disable

namespace TreewInc.Core.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240915205043_AddSeeds")]
    partial class AddSeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("FullName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Adriana.Rolfson@yahoo.com",
                            Name = "Amira Crooks",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Telly_Renner40@hotmail.com",
                            Name = "Maeve Jovanny Trantow",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Magdalena_Ullrich@yahoo.com",
                            Name = "Dina Dooley",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Torrey_Powlowski90@gmail.com",
                            Name = "Issac Bailey",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Lyla55@gmail.com",
                            Name = "Kasey Price",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Millie14@gmail.com",
                            Name = "Alisha Schroeder",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Tyshawn86@gmail.com",
                            Name = "Delbert Schaefer",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Emmalee_Feil@gmail.com",
                            Name = "Helene Ephraim Turner",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Bryon.Muller@gmail.com",
                            Name = "Merlin Heath Beahan",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Jaime_Streich21@gmail.com",
                            Name = "Jesse Ullrich",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        });
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Unde sapiente veniam vero delectus ex.",
                            Name = "Fantastic Fresh Chips",
                            Price = 285.28m,
                            Stock = 4
                        },
                        new
                        {
                            Id = 2,
                            Description = "Facilis voluptatem ipsum quasi facere.",
                            Name = "Tasty Frozen Tuna",
                            Price = 537.14m,
                            Stock = 18
                        },
                        new
                        {
                            Id = 3,
                            Description = "Quia vitae dolor rerum aut qui ullam ut fugit.",
                            Name = "Sleek Concrete Gloves",
                            Price = 261.35m,
                            Stock = 66
                        },
                        new
                        {
                            Id = 4,
                            Description = "Illo adipisci eos facere placeat.",
                            Name = "Sleek Steel Gloves",
                            Price = 867.74m,
                            Stock = 78
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ipsum iusto aut suscipit autem voluptatem et nemo.",
                            Name = "Awesome Metal Gloves",
                            Price = 271.70m,
                            Stock = 86
                        },
                        new
                        {
                            Id = 6,
                            Description = "Occaecati aut earum ratione qui.",
                            Name = "Awesome Concrete Chicken",
                            Price = 909.99m,
                            Stock = 83
                        },
                        new
                        {
                            Id = 7,
                            Description = "Omnis recusandae aliquam quasi voluptate minima eveniet.",
                            Name = "Generic Soft Mouse",
                            Price = 546.26m,
                            Stock = 27
                        },
                        new
                        {
                            Id = 8,
                            Description = "Modi vitae illo inventore iste.",
                            Name = "Refined Cotton Chicken",
                            Price = 310.49m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 9,
                            Description = "Tempora voluptate repudiandae.",
                            Name = "Generic Fresh Bike",
                            Price = 491.21m,
                            Stock = 26
                        },
                        new
                        {
                            Id = 10,
                            Description = "Molestiae ea sit.",
                            Name = "Awesome Granite Pants",
                            Price = 651.94m,
                            Stock = 93
                        });
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Sale", b =>
                {
                    b.HasOne("TreewInc.Core.Domain.Entities.Client", "Client")
                        .WithMany("Sales")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreewInc.Core.Domain.Entities.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Client", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Product", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
