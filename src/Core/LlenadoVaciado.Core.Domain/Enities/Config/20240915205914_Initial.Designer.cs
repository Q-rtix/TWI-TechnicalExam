// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreewInc.Core.Persistence.Contexts;

#nullable disable

namespace TreewInc.Core.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240915205914_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("FullName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Ken87@hotmail.com",
                            Name = "Ali Boyer",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Desmond.Von@hotmail.com",
                            Name = "Hallie Alvera Wiegand",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Madaline.Torphy91@gmail.com",
                            Name = "Raina Jalen Nader",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Edyth.Witting88@gmail.com",
                            Name = "Hailee Breitenberg",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Hattie12@yahoo.com",
                            Name = "Lori Mark O'Hara",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Myron_Schaden44@gmail.com",
                            Name = "Deontae Glover",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Lempi_Raynor@yahoo.com",
                            Name = "Dallas Mina Stracke",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Zola56@hotmail.com",
                            Name = "Leonel Bradtke",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Florencio.Witting44@yahoo.com",
                            Name = "Cecile Terrance White",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Geovanni.Murray@yahoo.com",
                            Name = "Laverne Garrison Farrell",
                            Password = "Pass1234",
                            Phone = "1 7691651548"
                        });
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Totam voluptatem quas asperiores cupiditate qui qui.",
                            Name = "Small Steel Pizza",
                            Price = 132.54m,
                            Stock = 53
                        },
                        new
                        {
                            Id = 2,
                            Description = "Magni et consequatur.",
                            Name = "Refined Frozen Table",
                            Price = 593.21m,
                            Stock = 27
                        },
                        new
                        {
                            Id = 3,
                            Description = "Repellendus consectetur odio tempora nihil quis excepturi dolores.",
                            Name = "Tasty Plastic Soap",
                            Price = 295.20m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 4,
                            Description = "Non consequuntur dolores et incidunt qui.",
                            Name = "Practical Granite Computer",
                            Price = 856.40m,
                            Stock = 96
                        },
                        new
                        {
                            Id = 5,
                            Description = "Nemo id ad assumenda sapiente qui perspiciatis odit esse adipisci.",
                            Name = "Tasty Rubber Fish",
                            Price = 978.62m,
                            Stock = 47
                        },
                        new
                        {
                            Id = 6,
                            Description = "Rerum nobis et accusamus necessitatibus a beatae hic ipsum.",
                            Name = "Handcrafted Frozen Shirt",
                            Price = 592.42m,
                            Stock = 62
                        },
                        new
                        {
                            Id = 7,
                            Description = "Nostrum omnis dolorem quia sit beatae nihil et.",
                            Name = "Licensed Concrete Cheese",
                            Price = 203.41m,
                            Stock = 61
                        },
                        new
                        {
                            Id = 8,
                            Description = "Qui non culpa est qui placeat et esse.",
                            Name = "Handcrafted Metal Bacon",
                            Price = 103.07m,
                            Stock = 39
                        },
                        new
                        {
                            Id = 9,
                            Description = "Beatae sit aut dolor iusto quia perspiciatis.",
                            Name = "Handmade Fresh Bike",
                            Price = 910.44m,
                            Stock = 57
                        },
                        new
                        {
                            Id = 10,
                            Description = "Qui repudiandae odit cupiditate facilis et odio odit.",
                            Name = "Small Metal Pants",
                            Price = 820.03m,
                            Stock = 78
                        });
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Sale", b =>
                {
                    b.HasOne("TreewInc.Core.Domain.Entities.Client", "Client")
                        .WithMany("Sales")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreewInc.Core.Domain.Entities.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Client", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Product", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
