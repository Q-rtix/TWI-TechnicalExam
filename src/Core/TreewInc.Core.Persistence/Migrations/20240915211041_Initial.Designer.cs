// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreewInc.Core.Persistence.Contexts;

#nullable disable

namespace TreewInc.Core.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240915211041_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)")
                        .HasColumnName("FullName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Marco45@gmail.com",
                            Name = "Nettie Streich",
                            Password = "$2a$11$QcYNwvXh8Aq5cgs48kX/nOS9BkUbkZJ.eV6kA1bNeEr.ASEZudmOi",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Keenan.Casper95@hotmail.com",
                            Name = "Mylene Blanche Beatty",
                            Password = "$2a$11$zsVPE4dtzSuBJ8MwfwXesemIIEYkMZ4nZPD9HoDYhDgyW5sKegKYW",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Dangelo.Altenwerth36@yahoo.com",
                            Name = "Katlyn Considine",
                            Password = "$2a$11$Z00KYCOM83BxgWZ/4bKPceb6.rAF/Pzq4uCQw6OF9N2rGZG1SJozW",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Doug_Mills@gmail.com",
                            Name = "Katarina Derick Rosenbaum",
                            Password = "$2a$11$kVQM6wZOf/HadquvxcXVq.gLkSnwW0h.5lXIWeu1VYSQ58/Si/KFe",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Laron_Hammes@gmail.com",
                            Name = "Gus Pasquale Senger",
                            Password = "$2a$11$ESrcWEnW3KRw4z7/PZGixufzVRL30bf.lI2BEel9FyLl5QzD6keGW",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Eda_Haley@yahoo.com",
                            Name = "Asia Considine",
                            Password = "$2a$11$SzWIdYmDVrHqCAqiWofSK.Yh5dmsZiggglAP10NhirxjvoVsa/A2m",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Keenan34@gmail.com",
                            Name = "Lauretta Lowell Jerde",
                            Password = "$2a$11$gPkoSSpB1lpD6poCmca30O9HkuQO./2akYGTPbXkWwXewlOtGRKx.",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Leta.Runolfsdottir@hotmail.com",
                            Name = "Zelma Adell Marks",
                            Password = "$2a$11$iwpg2uC8gh4IpvR7Jz56x.fjMJq7eVh7U45rVFX7r.flB//neNWfm",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Willa42@yahoo.com",
                            Name = "Graciela Zane Howell",
                            Password = "$2a$11$mX5XthMdcx7Zi0eSkrgrPObsUutJ6OT7ZuuYsSR1it07PMb26p.q2",
                            Phone = "1 7691651548"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Leda.Jenkins@hotmail.com",
                            Name = "Damon Tromp",
                            Password = "$2a$11$mCluNsKgXtGZkRJ6GL/2RezdU1/25VWft.r94qeA.qLV3NG.2xSMS",
                            Phone = "1 7691651548"
                        });
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Ducimus aperiam et dolores ut.",
                            Name = "Handcrafted Metal Mouse",
                            Price = 454.41m,
                            Stock = 41
                        },
                        new
                        {
                            Id = 2,
                            Description = "Voluptatem soluta sapiente sit et est eius velit ea.",
                            Name = "Generic Cotton Pizza",
                            Price = 105.89m,
                            Stock = 14
                        },
                        new
                        {
                            Id = 3,
                            Description = "Sed laboriosam quia enim hic recusandae saepe consequatur natus.",
                            Name = "Unbranded Steel Bacon",
                            Price = 645.18m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 4,
                            Description = "Voluptas quia harum fugit.",
                            Name = "Handmade Rubber Chair",
                            Price = 570.37m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ipsa voluptas rerum voluptas facere officiis beatae esse voluptates iusto.",
                            Name = "Tasty Plastic Tuna",
                            Price = 977.19m,
                            Stock = 41
                        },
                        new
                        {
                            Id = 6,
                            Description = "Labore voluptatem ab.",
                            Name = "Licensed Granite Table",
                            Price = 576.20m,
                            Stock = 22
                        },
                        new
                        {
                            Id = 7,
                            Description = "Necessitatibus beatae magnam fuga.",
                            Name = "Incredible Plastic Chips",
                            Price = 852.78m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 8,
                            Description = "Earum delectus est dolores.",
                            Name = "Generic Granite Table",
                            Price = 731.81m,
                            Stock = 85
                        },
                        new
                        {
                            Id = 9,
                            Description = "Ad laborum eum veritatis.",
                            Name = "Rustic Plastic Towels",
                            Price = 905.61m,
                            Stock = 33
                        },
                        new
                        {
                            Id = 10,
                            Description = "Porro architecto occaecati consequatur et facere.",
                            Name = "Tasty Cotton Table",
                            Price = 686.78m,
                            Stock = 67
                        });
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Sale", b =>
                {
                    b.HasOne("TreewInc.Core.Domain.Entities.Client", "Client")
                        .WithMany("Sales")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreewInc.Core.Domain.Entities.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Client", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("TreewInc.Core.Domain.Entities.Product", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
